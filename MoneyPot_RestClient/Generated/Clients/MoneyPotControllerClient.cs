//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace MoneyPot_RestClient.Generated.Clients
{
   using System;
   using System.Threading.Tasks;
   using System.Net.Http;
   using Substrate.NetApi.Model.Types.Primitive;
   using MoneyPot_NetApiExt.Generated.Model.primitive_types;
   using MoneyPot_NetApiExt.Generated.Model.pallet_money_pot.pallet;
   using MoneyPot_NetApiExt.Generated.Model.sp_runtime.bounded.bounded_vec;
   using MoneyPot_RestClient.Generated.Interfaces;
   
   public sealed class MoneyPotControllerClient : BaseClient, IMoneyPotControllerClient
   {
      private HttpClient _httpClient;
      private BaseSubscriptionClient _subscriptionClient;
      public MoneyPotControllerClient(HttpClient httpClient, BaseSubscriptionClient subscriptionClient)
      {
         _httpClient = httpClient;
         _subscriptionClient = subscriptionClient;
      }
      public async Task<U32> GetMoneyPotsCount()
      {
         return await SendRequestAsync<U32>(_httpClient, "moneypot/moneypotscount");
      }
      public async Task<bool> SubscribeMoneyPotsCount()
      {
         return await _subscriptionClient.SubscribeAsync("MoneyPot.MoneyPotsCount");
      }
      public async Task<H256> GetMoneyPotsHash(U32 key)
      {
         return await SendRequestAsync<H256>(_httpClient, "moneypot/moneypotshash", MoneyPot_NetApiExt.Generated.Storage.MoneyPotStorage.MoneyPotsHashParams(key));
      }
      public async Task<bool> SubscribeMoneyPotsHash(U32 key)
      {
         return await _subscriptionClient.SubscribeAsync("MoneyPot.MoneyPotsHash", MoneyPot_NetApiExt.Generated.Storage.MoneyPotStorage.MoneyPotsHashParams(key));
      }
      public async Task<MoneyPot> GetMoneyPots(H256 key)
      {
         return await SendRequestAsync<MoneyPot>(_httpClient, "moneypot/moneypots", MoneyPot_NetApiExt.Generated.Storage.MoneyPotStorage.MoneyPotsParams(key));
      }
      public async Task<bool> SubscribeMoneyPots(H256 key)
      {
         return await _subscriptionClient.SubscribeAsync("MoneyPot.MoneyPots", MoneyPot_NetApiExt.Generated.Storage.MoneyPotStorage.MoneyPotsParams(key));
      }
      public async Task<BoundedVecT4> GetMoneyPotOwned(MoneyPot_NetApiExt.Generated.Model.sp_core.crypto.AccountId32 key)
      {
         return await SendRequestAsync<BoundedVecT4>(_httpClient, "moneypot/moneypotowned", MoneyPot_NetApiExt.Generated.Storage.MoneyPotStorage.MoneyPotOwnedParams(key));
      }
      public async Task<bool> SubscribeMoneyPotOwned(MoneyPot_NetApiExt.Generated.Model.sp_core.crypto.AccountId32 key)
      {
         return await _subscriptionClient.SubscribeAsync("MoneyPot.MoneyPotOwned", MoneyPot_NetApiExt.Generated.Storage.MoneyPotStorage.MoneyPotOwnedParams(key));
      }
      public async Task<BoundedVecT5> GetMoneyPotContribution(H256 key)
      {
         return await SendRequestAsync<BoundedVecT5>(_httpClient, "moneypot/moneypotcontribution", MoneyPot_NetApiExt.Generated.Storage.MoneyPotStorage.MoneyPotContributionParams(key));
      }
      public async Task<bool> SubscribeMoneyPotContribution(H256 key)
      {
         return await _subscriptionClient.SubscribeAsync("MoneyPot.MoneyPotContribution", MoneyPot_NetApiExt.Generated.Storage.MoneyPotStorage.MoneyPotContributionParams(key));
      }
   }
}
