@inject IMoneyPotRepository moneyPotRepository;
@inject ILogger<Program> logger;

<h3 class="mb-4 text-xl font-medium">Contribute to money pot</h3>
<EditForm Model="Contributor"
          OnValidSubmit="ValidateContribution"
          class="space-y-6">
    <div>
        <InputNumber class=" bg-gray-50 border border-gray-300 text-gray-900 text-sm rounded-lg focus:ring-blue-500 focus:border-blue-500 block w-full p-2.5"
                     @bind-Value="@Contributor.Amount" />
    </div>

    <MPButton TypeBtn="MPButton.TypeButton.Submit">
        Validate contribution
    </MPButton>
</EditForm>

@code {
    [Parameter] public MoneyPotDto MoneyPot { get; set; }
    [Parameter] public EventCallback<ContributorDto> OnMoneyPotContribution { get; set; }
    public ContributorDto Contributor { get; set; } = new();

    protected override void OnInitialized()
    {
        if (MoneyPot == null) 
            throw new ArgumentNullException("Please provide a money pot as parameter");
    }

    protected async Task ValidateContribution()
    {
        await moneyPotRepository.ContributeMoneyPotAsync(MoneyPot, Contributor.Amount, async (string status) => {
            //Todo : gérer les comptes inconnus
            
            logger.LogInformation($"Money pot contribution = {status}");
            await OnMoneyPotContribution.InvokeAsync(Contributor);
        });
    }
}
