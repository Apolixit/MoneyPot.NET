//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace MoneyPot_RestClient.Mockup.Generated.Clients
{
   using System;
   using System.Threading.Tasks;
   using System.Net.Http;
   using Ajuna.NetApi.Model.Types.Primitive;
   using MoneyPot_NetApiExt.Generated.Model.primitive_types;
   using MoneyPot_NetApiExt.Generated.Model.pallet_money_pot.pallet;
   using MoneyPot_NetApiExt.Generated.Model.sp_runtime.bounded.bounded_vec;
   using MoneyPot_RestClient.Mockup.Generated.Interfaces;
   
   public sealed class MoneyPotControllerMockupClient : MockupBaseClient, IMoneyPotControllerMockupClient
   {
      private HttpClient _httpClient;
      public MoneyPotControllerMockupClient(HttpClient httpClient)
      {
         _httpClient = httpClient;
      }
      public async Task<bool> SetMoneyPotsCount(U32 value)
      {
         return await SendMockupRequestAsync(_httpClient, "MoneyPot/MoneyPotsCount", value.Encode(), MoneyPot_NetApiExt.Generated.Storage.MoneyPotStorage.MoneyPotsCountParams());
      }
      public async Task<bool> SetMoneyPotsHash(H256 value, U32 key)
      {
         return await SendMockupRequestAsync(_httpClient, "MoneyPot/MoneyPotsHash", value.Encode(), MoneyPot_NetApiExt.Generated.Storage.MoneyPotStorage.MoneyPotsHashParams(key));
      }
      public async Task<bool> SetMoneyPots(MoneyPot value, H256 key)
      {
         return await SendMockupRequestAsync(_httpClient, "MoneyPot/MoneyPots", value.Encode(), MoneyPot_NetApiExt.Generated.Storage.MoneyPotStorage.MoneyPotsParams(key));
      }
      public async Task<bool> SetMoneyPotOwned(BoundedVecT4 value, MoneyPot_NetApiExt.Generated.Model.sp_core.crypto.AccountId32 key)
      {
         return await SendMockupRequestAsync(_httpClient, "MoneyPot/MoneyPotOwned", value.Encode(), MoneyPot_NetApiExt.Generated.Storage.MoneyPotStorage.MoneyPotOwnedParams(key));
      }
      public async Task<bool> SetMoneyPotContribution(BoundedVecT5 value, H256 key)
      {
         return await SendMockupRequestAsync(_httpClient, "MoneyPot/MoneyPotContribution", value.Encode(), MoneyPot_NetApiExt.Generated.Storage.MoneyPotStorage.MoneyPotContributionParams(key));
      }
   }
}
