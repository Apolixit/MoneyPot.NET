@inject IBlockRepository blockRepository;

<div class="flex justify-center items-center">
    
    <span class="mr-2"><i class="fa-brands fa-hive mr-2"></i>  Block n° @BlockTarget.Value.ToString("N0")</span>
    
    <span class="ml-2"><i class="fa-solid fa-hourglass-end mx-2"></i> End time @_estimatedDatetime.ToString("g")</span>
</div>

@code {
    [Parameter] public int? BlockTarget { get; set; }
    private DateTime _estimatedDatetime;

    protected override async Task OnInitializedAsync()
    {
        if (BlockTarget == null)
            throw new ArgumentNullException("A block target is required");

        int _currentBlock = 0;
        var lastBlock = await blockRepository.GetLastBlockAsync();
        if (lastBlock != null && lastBlock.BlockNumber > 1)
            _currentBlock = lastBlock.BlockNumber - 1;

        //_estimatedDatetime = DateTime.Now.AddSeconds((double)((BlockTarget - _currentBlock) * blockRepository.GetBlockTime() / 1000));
        _estimatedDatetime = SubstrateHelper.BlockNumberToDateTime(BlockTarget.Value, _currentBlock, blockRepository.GetBlockTime(), true);
    }

}
