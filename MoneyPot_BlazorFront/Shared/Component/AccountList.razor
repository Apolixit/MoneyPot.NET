@using MoneyPot_BlazorFront.Helpers
@inject IAccountRepository accountRepository;
@inject ISubstrateService substrateService;
@inject IAccountService accountService;
@inject IToastService toastService;

<div>
    <div class="mb-4 flex items-center justify-between">
        <div class="items-left">
            <MPTitle Title="Accounts" />
        </div>
        <div class="items-right">
            @if (accountService.ConnectedAccount != null)
            {
                <span class="text-sm">You are connected as @accountService.ConnectedAccount.Name</span>
            }
        </div>
    </div>

    <div class="flex flex-col mt-8">
        <div class="overflow-x-auto">
            <MPTable Elems="Accounts"
                     Context="account">
                <TbodyContent>
                    <tr class="@(account.Address == accountService.ConnectedAccount.Address ? "bg-green-100" : string.Empty)"
                        @onclick="@(() => accountRowSelected(account))">
                        <td>
                            <img class="h-10 w-10 rounded-full" src="@account.AvatarUrl" alt="@account.Name">
                        </td>
                        <td class="text-sm font-normal">
                            <text>@account.Name</text>
                        </td>
                        <td class="text-xs font-normal text-gray-500">
                            @account.Address
                        </td>
                        <td>
                            @account.Balance.ToString("N0")
                        </td>
                    </tr>
                </TbodyContent>
            </MPTable>
        </div>
    </div>
</div>

@code {
    [CascadingParameter] protected MainLayout.GlobalInformation? global { get; set; }
    protected List<AccountDto> Accounts { get; set; } = new List<AccountDto>();

    protected override async Task OnInitializedAsync()
    {
        await accountRepository.SubscribeAccountAsync((AccountDto account) =>
        {
            if (accountService.ConnectedAccount == null)
                accountService.UpdateConnectedAccount(account);
            
            Accounts.AddOrUpdate(account);
            StateHasChanged();
        });


    }

    private void accountRowSelected(AccountDto selectedAccount)
    {
        accountService.UpdateConnectedAccount(selectedAccount);
        toastService.ShowInfo($"You are now connected as {selectedAccount.Name}");
        StateHasChanged();
    }
}
