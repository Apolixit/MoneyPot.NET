//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

using Ajuna.NetApi;
using Ajuna.NetApi.Model.Extrinsics;
using Ajuna.NetApi.Model.Meta;
using Ajuna.NetApi.Model.Types;
using Ajuna.NetApi.Model.Types.Base;
using System.Collections.Generic;
using System.Threading;
using System.Threading.Tasks;


namespace MoneyPot_NetApiExt.Generated.Storage
{
    
    
    public sealed class MoneyPotStorage
    {
        
        // Substrate client for the storage calls.
        private SubstrateClientExt _client;
        
        public MoneyPotStorage(SubstrateClientExt client)
        {
            this._client = client;
            _client.StorageKeyDict.Add(new System.Tuple<string, string>("MoneyPot", "MoneyPotsCount"), new System.Tuple<Ajuna.NetApi.Model.Meta.Storage.Hasher[], System.Type, System.Type>(null, null, typeof(Ajuna.NetApi.Model.Types.Primitive.U32)));
            _client.StorageKeyDict.Add(new System.Tuple<string, string>("MoneyPot", "MoneyPotsHash"), new System.Tuple<Ajuna.NetApi.Model.Meta.Storage.Hasher[], System.Type, System.Type>(new Ajuna.NetApi.Model.Meta.Storage.Hasher[] {
                            Ajuna.NetApi.Model.Meta.Storage.Hasher.Twox64Concat}, typeof(Ajuna.NetApi.Model.Types.Primitive.U32), typeof(MoneyPot_NetApiExt.Generated.Model.primitive_types.H256)));
            _client.StorageKeyDict.Add(new System.Tuple<string, string>("MoneyPot", "MoneyPots"), new System.Tuple<Ajuna.NetApi.Model.Meta.Storage.Hasher[], System.Type, System.Type>(new Ajuna.NetApi.Model.Meta.Storage.Hasher[] {
                            Ajuna.NetApi.Model.Meta.Storage.Hasher.Twox64Concat}, typeof(MoneyPot_NetApiExt.Generated.Model.primitive_types.H256), typeof(MoneyPot_NetApiExt.Generated.Model.pallet_money_pot.pallet.MoneyPot)));
            _client.StorageKeyDict.Add(new System.Tuple<string, string>("MoneyPot", "MoneyPotOwned"), new System.Tuple<Ajuna.NetApi.Model.Meta.Storage.Hasher[], System.Type, System.Type>(new Ajuna.NetApi.Model.Meta.Storage.Hasher[] {
                            Ajuna.NetApi.Model.Meta.Storage.Hasher.Twox64Concat}, typeof(MoneyPot_NetApiExt.Generated.Model.sp_core.crypto.AccountId32), typeof(MoneyPot_NetApiExt.Generated.Model.sp_runtime.bounded.bounded_vec.BoundedVecT4)));
            _client.StorageKeyDict.Add(new System.Tuple<string, string>("MoneyPot", "MoneyPotContribution"), new System.Tuple<Ajuna.NetApi.Model.Meta.Storage.Hasher[], System.Type, System.Type>(new Ajuna.NetApi.Model.Meta.Storage.Hasher[] {
                            Ajuna.NetApi.Model.Meta.Storage.Hasher.Twox64Concat}, typeof(MoneyPot_NetApiExt.Generated.Model.primitive_types.H256), typeof(MoneyPot_NetApiExt.Generated.Model.sp_runtime.bounded.bounded_vec.BoundedVecT5)));
        }
        
        /// <summary>
        /// >> MoneyPotsCountParams
        /// </summary>
        public static string MoneyPotsCountParams()
        {
            return RequestGenerator.GetStorage("MoneyPot", "MoneyPotsCount", Ajuna.NetApi.Model.Meta.Storage.Type.Plain);
        }
        
        /// <summary>
        /// >> MoneyPotsCount
        /// </summary>
        public async Task<Ajuna.NetApi.Model.Types.Primitive.U32> MoneyPotsCount(CancellationToken token)
        {
            string parameters = MoneyPotStorage.MoneyPotsCountParams();
            return await _client.GetStorageAsync<Ajuna.NetApi.Model.Types.Primitive.U32>(parameters, token);
        }
        
        /// <summary>
        /// >> MoneyPotsHashParams
        /// </summary>
        public static string MoneyPotsHashParams(Ajuna.NetApi.Model.Types.Primitive.U32 key)
        {
            return RequestGenerator.GetStorage("MoneyPot", "MoneyPotsHash", Ajuna.NetApi.Model.Meta.Storage.Type.Map, new Ajuna.NetApi.Model.Meta.Storage.Hasher[] {
                        Ajuna.NetApi.Model.Meta.Storage.Hasher.Twox64Concat}, new Ajuna.NetApi.Model.Types.IType[] {
                        key});
        }
        
        /// <summary>
        /// >> MoneyPotsHash
        /// </summary>
        public async Task<MoneyPot_NetApiExt.Generated.Model.primitive_types.H256> MoneyPotsHash(Ajuna.NetApi.Model.Types.Primitive.U32 key, CancellationToken token)
        {
            string parameters = MoneyPotStorage.MoneyPotsHashParams(key);
            return await _client.GetStorageAsync<MoneyPot_NetApiExt.Generated.Model.primitive_types.H256>(parameters, token);
        }
        
        /// <summary>
        /// >> MoneyPotsParams
        /// </summary>
        public static string MoneyPotsParams(MoneyPot_NetApiExt.Generated.Model.primitive_types.H256 key)
        {
            return RequestGenerator.GetStorage("MoneyPot", "MoneyPots", Ajuna.NetApi.Model.Meta.Storage.Type.Map, new Ajuna.NetApi.Model.Meta.Storage.Hasher[] {
                        Ajuna.NetApi.Model.Meta.Storage.Hasher.Twox64Concat}, new Ajuna.NetApi.Model.Types.IType[] {
                        key});
        }
        
        /// <summary>
        /// >> MoneyPots
        /// </summary>
        public async Task<MoneyPot_NetApiExt.Generated.Model.pallet_money_pot.pallet.MoneyPot> MoneyPots(MoneyPot_NetApiExt.Generated.Model.primitive_types.H256 key, CancellationToken token)
        {
            string parameters = MoneyPotStorage.MoneyPotsParams(key);
            return await _client.GetStorageAsync<MoneyPot_NetApiExt.Generated.Model.pallet_money_pot.pallet.MoneyPot>(parameters, token);
        }
        
        /// <summary>
        /// >> MoneyPotOwnedParams
        /// </summary>
        public static string MoneyPotOwnedParams(MoneyPot_NetApiExt.Generated.Model.sp_core.crypto.AccountId32 key)
        {
            return RequestGenerator.GetStorage("MoneyPot", "MoneyPotOwned", Ajuna.NetApi.Model.Meta.Storage.Type.Map, new Ajuna.NetApi.Model.Meta.Storage.Hasher[] {
                        Ajuna.NetApi.Model.Meta.Storage.Hasher.Twox64Concat}, new Ajuna.NetApi.Model.Types.IType[] {
                        key});
        }
        
        /// <summary>
        /// >> MoneyPotOwned
        /// </summary>
        public async Task<MoneyPot_NetApiExt.Generated.Model.sp_runtime.bounded.bounded_vec.BoundedVecT4> MoneyPotOwned(MoneyPot_NetApiExt.Generated.Model.sp_core.crypto.AccountId32 key, CancellationToken token)
        {
            string parameters = MoneyPotStorage.MoneyPotOwnedParams(key);
            return await _client.GetStorageAsync<MoneyPot_NetApiExt.Generated.Model.sp_runtime.bounded.bounded_vec.BoundedVecT4>(parameters, token);
        }
        
        /// <summary>
        /// >> MoneyPotContributionParams
        /// </summary>
        public static string MoneyPotContributionParams(MoneyPot_NetApiExt.Generated.Model.primitive_types.H256 key)
        {
            return RequestGenerator.GetStorage("MoneyPot", "MoneyPotContribution", Ajuna.NetApi.Model.Meta.Storage.Type.Map, new Ajuna.NetApi.Model.Meta.Storage.Hasher[] {
                        Ajuna.NetApi.Model.Meta.Storage.Hasher.Twox64Concat}, new Ajuna.NetApi.Model.Types.IType[] {
                        key});
        }
        
        /// <summary>
        /// >> MoneyPotContribution
        /// </summary>
        public async Task<MoneyPot_NetApiExt.Generated.Model.sp_runtime.bounded.bounded_vec.BoundedVecT5> MoneyPotContribution(MoneyPot_NetApiExt.Generated.Model.primitive_types.H256 key, CancellationToken token)
        {
            string parameters = MoneyPotStorage.MoneyPotContributionParams(key);
            return await _client.GetStorageAsync<MoneyPot_NetApiExt.Generated.Model.sp_runtime.bounded.bounded_vec.BoundedVecT5>(parameters, token);
        }
    }
    
    public sealed class MoneyPotCalls
    {
        
        /// <summary>
        /// >> create_with_limit_amount
        /// Contains one variant per dispatchable that can be called by an extrinsic.
        /// </summary>
        public static Method CreateWithLimitAmount(MoneyPot_NetApiExt.Generated.Model.sp_core.crypto.AccountId32 receiver, Ajuna.NetApi.Model.Types.Primitive.U128 amount)
        {
            System.Collections.Generic.List<byte> byteArray = new List<byte>();
            byteArray.AddRange(receiver.Encode());
            byteArray.AddRange(amount.Encode());
            return new Method(9, "MoneyPot", 0, "create_with_limit_amount", byteArray.ToArray());
        }
        
        /// <summary>
        /// >> create_with_limit_block
        /// Contains one variant per dispatchable that can be called by an extrinsic.
        /// </summary>
        public static Method CreateWithLimitBlock(MoneyPot_NetApiExt.Generated.Model.sp_core.crypto.AccountId32 receiver, Ajuna.NetApi.Model.Types.Primitive.U32 end_block)
        {
            System.Collections.Generic.List<byte> byteArray = new List<byte>();
            byteArray.AddRange(receiver.Encode());
            byteArray.AddRange(end_block.Encode());
            return new Method(9, "MoneyPot", 1, "create_with_limit_block", byteArray.ToArray());
        }
        
        /// <summary>
        /// >> add_balance
        /// Contains one variant per dispatchable that can be called by an extrinsic.
        /// </summary>
        public static Method AddBalance(MoneyPot_NetApiExt.Generated.Model.primitive_types.H256 ref_hash, Ajuna.NetApi.Model.Types.Primitive.U128 amount)
        {
            System.Collections.Generic.List<byte> byteArray = new List<byte>();
            byteArray.AddRange(ref_hash.Encode());
            byteArray.AddRange(amount.Encode());
            return new Method(9, "MoneyPot", 2, "add_balance", byteArray.ToArray());
        }
    }
    
    public enum MoneyPotErrors
    {
        
        /// <summary>
        /// >> MaxOpenOverflow
        /// The account has more than 'MaxMoneyPotCurrentlyOpen' money pot
        /// </summary>
        MaxOpenOverflow,
        
        /// <summary>
        /// >> NoEndTimeSpecified
        /// </summary>
        NoEndTimeSpecified,
        
        /// <summary>
        /// >> HasNoMoney
        /// No one added money
        /// </summary>
        HasNoMoney,
        
        /// <summary>
        /// >> LifetimeOverflow
        /// Money pot lifetime exceed 'MaxMoneyPotLifetime'
        /// </summary>
        LifetimeOverflow,
        
        /// <summary>
        /// >> LifetimeIsTooLow
        /// Money pot lifetime is in the past
        /// </summary>
        LifetimeIsTooLow,
        
        /// <summary>
        /// >> DoesNotExists
        /// The money pot does not exists
        /// </summary>
        DoesNotExists,
        
        /// <summary>
        /// >> AlreadyExists
        /// The money pot already exists
        /// </summary>
        AlreadyExists,
        
        /// <summary>
        /// >> NotEnoughBalance
        /// Contribution is too high
        /// </summary>
        NotEnoughBalance,
        
        /// <summary>
        /// >> MaxMoneyPotContributors
        /// The number of contributor is too high
        /// </summary>
        MaxMoneyPotContributors,
        
        /// <summary>
        /// >> TransferFailed
        /// Transfer failed for this account
        /// </summary>
        TransferFailed,
        
        /// <summary>
        /// >> InvalidAmountStep
        /// Incompatible amount set with step constant defined
        /// </summary>
        InvalidAmountStep,
        
        /// <summary>
        /// >> AmountToLow
        /// The amount participation is too low
        /// </summary>
        AmountToLow,
        
        /// <summary>
        /// >> MoneyPotIsClose
        /// Someone tries to contribute to an unactive pool
        /// </summary>
        MoneyPotIsClose,
    }
}
